name: OSVVM Regression FIFO with GHDL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  osvvm-ghdl-regression:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install dependencies (GHDL with LLVM backend, Tcl, Tcllib)
        run: |
          sudo apt update
          sudo apt install -y git build-essential \
            llvm-14 llvm-14-dev llvm-14-tools \
            zlib1g-dev gnat tcl tcllib

      - name: Build and install GHDL with LLVM backend
        run: |
          git clone https://github.com/ghdl/ghdl.git
          cd ghdl
          ./configure --with-llvm-config=llvm-config-14
          make -j$(nproc)
          sudo make install
          cd ..
          ghdl --version

          

      # Regression tests with precise failure handling
      - name: Run OSVVM interleave yuv test
        run: |
          set -e
          tclsh script/regression_tcl_axi_master_slave.tcl 2>&1 | tee regression_tcl_axi_master_slave.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_tcl_axi_master_slave.log; then
            echo "❌ Test failed: regression_tcl_axi_master_slave.tcl"
            exit 1
          fi

      # Regression tests with precise failure handling
      - name: Run OSVVM interleave yuv test
        run: |
          set -e
          tclsh script/regression_axi_stream_interleave.tcl 2>&1 | tee regression_axi_stream_interleave.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_axi_stream_interleave.log; then
            echo "❌ Test failed: regression_axi_stream_interleave.tcl"
            exit 1
          fi

      # Regression tests with precise failure handling
      - name: Run OSVVM byte packing
        run: |
          set -e
          tclsh script/regression_axi_byte_packing.tcl 2>&1 | tee regression_axi_byte_packing.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_axi_byte_packing.log; then
            echo "❌ Test failed: regression_axi_byte_packing.tcl"
            exit 1
          fi
      
      - name: Run OSVVM axi_lite_4
        run: |
          set -e
          tclsh script/regression_axi4.tcl 2>&1 | tee regression_axi4.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_axi4.log; then
            echo "❌ Test failed: regression_axi4.tcl"
            exit 1
          fi
          
      - name: Run OSVVM regression_axi4_olo.tcl
        run: |
          set -e
          tclsh script/regression_axi4_olo.tcl 2>&1 | tee regression_axi4_olo.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_axi4_olo.log; then
            echo "❌ Test failed: regression_axi4_olo.tcl"
            exit 1
          fi

      - name: Run OSVVM regression_axi4_python
        run: |
          set -e
          tclsh script/regression_axi4_python.tcl 2>&1 | tee regression_axi4_python.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_axi4_python.log; then
            echo "❌ Test failed: regression_axi4_python.tcl"
            exit 1
          fi

      - name: Run OSVVM regression_axi4_stream.tcl
        run: |
          set -e
          tclsh script/regression_axi4_stream.tcl 2>&1 | tee regression_axi4_stream.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_axi4_stream.log; then
            echo "❌ Test failed: regression_axi4_stream.tcl"
            exit 1
          fi

      - name: Run OSVVM regression_stream_image_inv.tcl
        run: |
          set -e
          tclsh script/regression_stream_image_inv.tcl 2>&1 | tee regression_stream_image_inv.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_stream_image_inv.log; then
            echo "❌ Test failed: regression_stream_image_inv.tcl"
            exit 1
          fi

      - name: Run OSVVM regression_fifo.tcl
        run: |
          set -e
          tclsh script/regression_fifo.tcl 2>&1 | tee regression_fifo.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_fifo.log; then
            echo "❌ Test failed: regression_fifo.tcl"
            exit 1
          fi

      - name: Run OSVVM regression_stream_delta.tcl
        run: |
          set -e
          tclsh script/regression_stream_delta.tcl 2>&1 | tee regression_stream_delta.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_stream_delta.log; then
            echo "❌ Test failed: regression_stream_delta.tcl"
            exit 1
          fi

      - name: Run OSVVM frame_gen__fifo.tcl
        run: |
          set -e
          tclsh script/regression_frame_gen.tcl 2>&1 | tee regression_frame_gen.log
          if grep -q -e "FAILED" -e "FAILURE" -e "ERROR" regression_frame_gen.log; then
            echo "❌ Test failed: regression_frame_gen.tcl"
            exit 1
          fi


      - name: Upload simulation results and logs
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: simulation-results
          path: |
            **/*.ghw
            **/*.vcd
            ./*.log
            ./